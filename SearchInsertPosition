// 1, https://leetcode.com/problems/search-insert-position/description/
// write in c++ and java
// www.cplusplus.com for vector, string ... usage

// cpp
class Solution{
public:
    int searchInsert(vector<int>& nums, int target) {
        int size = nums.size();
        int left = 0;
        int right = size;
        int mid = 0;

        while(left < right){
            mid = (left + right)/2;

            if(nums[mid] == target){
                return mid;
            } else if(target < nums[mid]){
                right = mid;
            } else if(target > nums[mid]){
                left = mid + 1;
            }
        }

        return right;
    }
};

// java
class Solution {
    public int searchInsert(int[] nums, int target) {
        int size = nums.length;
        int left = 0;
        int right = size - 1;
        int mid = 0;

        while(left <= right){
            mid = (left + right + 1)/2;
            if(target == nums[mid]){
                return mid;
            } else if(target < nums[mid]){
                right = mid - 1;
            } else if(target > nums[mid]){
                left = mid + 1;
            }
        }
        if(target > nums[mid]){
            return mid + 1;
        } else{
            return mid;
        }

    }
}
